```{r setup}
#| include: false 
library(tidyverse) 
```

# Evaluation

## Fluxes

```{r fluxes}
#| eval: false
trollwater <- list(
  Paracou = read_tsv("results/run3/Paracou_R1/Paracou_R1_0_water_balance.txt") %>% 
     mutate(date = as_date("2004/01/01")+iter),
  Tapajos = read_tsv("results/run3/Tapajos_R1/Tapajos_R1_0_water_balance.txt") %>% 
     mutate(date = as_date("2002/01/01")+iter)
) %>% bind_rows(.id = "site") %>% 
  mutate(swc10 = SWC_0, swc20 = SWC_1, swc80 = SWC_3,
         et = (transpitation_0 + transpitation_1 + transpitation_2 + 
                 transpitation_3 + transpitation_4 + evaporation)*1000) %>% 
  select(site, date, swc10, swc20, swc80, et) %>% 
  group_by(site, year = year(date)) %>% 
  mutate(rswc10 = swc10/quantile(swc10, 0.95, na.rm = T)) %>% 
  ungroup() %>% 
  select(-year) %>% 
  gather(variable, simulated, -site, -date)
trollsum <- list(
  Paracou = read_tsv("results/run3/Paracou_R1/Paracou_R1_0_sumstats.txt") %>% 
     mutate(date = as_date("2004/01/01")+iter),
  Tapajos = read_tsv("results/run3/Tapajos_R1/Tapajos_R1_0_sumstats.txt") %>% 
     mutate(date = as_date("2002/01/01")+iter)
) %>% bind_rows(.id = "site") %>% 
  select(-npp, -rday, -rnight, -rstem) %>% 
  mutate(litter = litterfall*10^2, gpp = gpp*10^2*365/10^3) %>% 
  select(-iter, -litterfall) %>% 
  gather(variable, simulated, -site, -date)
lai <- list(
  Paracou = read_tsv("results/run3/Paracou_R1/Paracou_R1_0_LAIdynamics.txt") %>% 
     mutate(date = as_date("2004/01/01")+iter),
  Tapajos = read_tsv("results/run3/Tapajos_R1/Tapajos_R1_0_LAIdynamics.txt") %>% 
     mutate(date = as_date("2002/01/01")+iter)
) %>% bind_rows(.id = "site") %>% 
  mutate(variable = "lai", simulated = LAI) %>% 
  select(site, date, variable, simulated)
lai_age <- list(
  Paracou = list(
    lai_young = read_tsv("results/run3/Paracou_R1/Paracou_R1_0_LAIyoung.txt"),
    lai_mature = read_tsv("results/run3/Paracou_R1/Paracou_R1_0_LAImature.txt") %>% 
      mutate(iter = as.numeric(iter)) %>% na.omit(),
    lai_old = read_tsv("results/run3/Paracou_R1/Paracou_R1_0_LAIold.txt") %>% 
      mutate(iter = as.numeric(iter)) %>% na.omit()
  ) %>% bind_rows(.id = "variable"),
  Tapajos = list(
    lai_young = read_tsv("results/run3/Tapajos_R1/Tapajos_R1_0_LAIyoung.txt"),
    lai_mature = read_tsv("results/run3/Tapajos_R1/Tapajos_R1_0_LAImature.txt") %>% 
      mutate(iter = as.numeric(iter)) %>% na.omit(),
    lai_old = read_tsv("results/run3/Tapajos_R1/Tapajos_R1_0_LAIold.txt") %>% 
      mutate(iter = as.numeric(iter)) %>% na.omit()
  ) %>% bind_rows(.id = "variable")
) %>% bind_rows(.id = "site") %>% 
  mutate(date = as_date("2004/01/01")+iter) %>% 
  select(-iter) %>% 
  gather(height, value, -date, -variable, -site) %>% 
  group_by(site, variable, date) %>% 
  summarise(simulated = sum(value))
bind_rows(trollwater, trollsum, lai, lai_age) %>% 
  write_tsv("outputs/evaluation_fluxes.tsv")
```

### Growth Primary Productivity

```{r gppdata}
#| message: false
daily <- read_tsv("outputs/evaluation_fluxes.tsv") %>% 
  filter(variable == "gpp") %>% 
  left_join(read_tsv("outputs/fluxnet_fluxes.tsv") %>% 
              mutate(observed = value*10^2*365/10^3) %>% 
              select(-value)) %>% 
  left_join(read_tsv("outputs/fluxnet_fluxes.tsv") %>% 
              filter(variable == "par") %>% 
              rename(par = value) %>% 
              select(-variable)) %>% 
  left_join(read_tsv("data/fluxes/rtsif.tsv") %>% 
              mutate(satellite = rtsif*15.343*365/10^3) %>% 
              select(-rtsif)) %>% 
  gather(type, value, -site, -date, -variable, -par)
monthly <- daily %>% 
  group_by(site, date = floor_date(date, "month"), variable, type) %>% 
  summarise(l = quantile(value, 0.025, na.rm = TRUE), 
            value = mean(value, na.rm = TRUE), 
            h = quantile(value, 0.975, na.rm = TRUE))
```

```{r gppdaily}
#| message: false
#| warning: false
daily %>% 
  ggplot(aes(date, value, col = type)) +
  geom_line(alpha = 0.5) +
  geom_line(data = monthly) +
  facet_wrap(~ site, scales = "free_x") +
  theme_bw() +
  theme(legend.position = "bottom") +
  xlab("") + ylab("Growth Primary Productivity (kgC/m2/yr)")
```

```{r gpp15days}
#| message: false
#| warning: false
daily %>% 
  group_by(site, variable, type, date = floor_date(date, "15 days")) %>% 
  summarise_all(mean, na.rm = T) %>%
  mutate(week = week(date)) %>%  
  group_by(site, variable, type, week) %>% 
  summarise(l = quantile(value, 0.025, na.rm = TRUE), 
            m = mean(value, na.rm = TRUE), 
            h = quantile(value, 0.975, na.rm = TRUE)) %>% 
  ggplot(aes(week, m)) +
  geom_rect(aes(xmin = week, xmax = end), fill  = "#fff4e0",
           ymin = -Inf, ymax = Inf, alpha = 0.5,
           data = data.frame(week = week(as_date(c("2000-8-1", "2000-06-15"))),
                             m = -Inf,
                             end = week(as_date(c("2000-12-1", "2000-11-1"))),
                             site = c("Paracou", "Tapajos"))) +
  geom_ribbon(aes(ymin = l, ymax = h, fill = type), col = NA, alpha = 0.2) +
  geom_smooth(aes(col = type), se = FALSE) +
  theme_bw() +
  theme(axis.title = element_blank(), legend.position = "bottom") +
  scale_fill_discrete("") +
  scale_color_discrete("") +
  facet_wrap(~ site, scales = "free_x") +
    scale_x_continuous(breaks = week(as_date(paste("2000-", 1:12, "-01"))),
                     labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"))
```

```{r gpppar}
#| message: false
#| warning: false
daily %>% 
  ggplot(aes(par/10^2, value, col = type)) +
  geom_point(alpha = 0.1) +
  theme_bw() +
  facet_wrap(~ site) +
  theme(legend.position = "bottom") +
  geom_smooth(method = "lm", formula = "y ~ 1+log(x)", se = FALSE) +
  facet_wrap(~ site) +
    xlab("Incoming PAR (mol/m2/day)") + ylab("Growth Primary Productivity (GPP, gC/m2/day)") +
  ylim(0, NA) +
  ggpubr::stat_cor()
```

```{r gppevalplot}
#| message: false
#| warning: false
daily %>% 
  pivot_wider(names_from = type, values_from = value) %>% 
  gather(type, observed, -site, -date, -variable, -par, -simulated) %>% 
  ggplot(aes(simulated,observed, col = yday(date))) +
  facet_grid(site ~ type) +
  theme_bw() +
  geom_point() +
  scale_color_viridis_c("Day") +
  geom_abline(col = "red") +
  ylab("Observed GPP (gC/m2/day)") + xlab("Simulated GPP (gC/m2/day)") +
  scale_color_viridis_c("Day") +
  ggpubr::stat_cor()
```

```{r evaltab}
daily %>% 
  pivot_wider(names_from = type, values_from = value) %>% 
  gather(type, observed, -site, -date, -variable, -par, -simulated) %>% 
  na.omit() %>% 
  nest_by(site, variable, type) %>% 
  mutate(R2 = summary(lm(observed ~ 0 + simulated, data = data))$r.squared,
         CC = cor(data$simulated, data$observed),
         RMSEP = sqrt(mean((data$simulated-data$observed)^2)),
         RRMSEP = sqrt(mean((data$simulated-data$observed)^2))/mean(data$observed),
         SD =sd(data$simulated-data$observed),
         RSD =sd(data$simulated-data$observed)/mean(data$observed)) %>% 
  select(-data) %>% 
  knitr::kable()
```

### Leaf Area Index

```{r laidata}
#| message: false
daily <- read_tsv("outputs/evaluation_fluxes.tsv") %>% 
  filter(variable == "lai") %>% 
  select(-variable) %>% 
  mutate(type = "simulated") %>% 
  rename(value = simulated) %>% 
  bind_rows(read_tsv("outputs/lai.tsv") %>% 
              rename(type = variable))
monthly <- daily %>% 
  group_by(site, date = floor_date(date, "month"), type) %>% 
  summarise(l = quantile(value, 0.025, na.rm = TRUE), 
            value = mean(value, na.rm = TRUE), 
            h = quantile(value, 0.975, na.rm = TRUE))
```

```{r laidaily}
#| message: false
#| warning: false
daily %>% 
  ggplot(aes(date, value, col = type)) +
  geom_line(alpha = 0.5) +
  geom_line(data = monthly) +
  facet_wrap(~ site, scales = "free_x") +
  theme_bw() +
  theme(legend.position = "bottom") +
  xlab("") + ylab("Leaf Area Index (m2/m2)")
```

```{r lai15days}
#| message: false
#| warning: false
daily %>% 
  group_by(site, type, date = floor_date(date, "15 days")) %>% 
  summarise_all(mean, na.rm = T) %>%
  mutate(week = week(date)) %>%  
  group_by(site, type, week) %>% 
  summarise(l = quantile(value, 0.025, na.rm = TRUE), 
            m = mean(value, na.rm = TRUE), 
            h = quantile(value, 0.975, na.rm = TRUE)) %>% 
  ggplot(aes(week, m)) +
  geom_rect(aes(xmin = week, xmax = end), fill  = "#fff4e0",
           ymin = -Inf, ymax = Inf, alpha = 0.5,
           data = data.frame(week = week(as_date(c("2000-8-1", "2000-06-15"))),
                             m = -Inf,
                             end = week(as_date(c("2000-12-1", "2000-11-1"))),
                             site = c("Paracou", "Tapajos"))) +
  geom_ribbon(aes(ymin = l, ymax = h, fill = type), col = NA, alpha = 0.2) +
  geom_smooth(aes(col = type), se = FALSE) +
  theme_bw() +
  theme(axis.title = element_blank(), legend.position = "bottom") +
  scale_fill_discrete("") +
  scale_color_discrete("") +
  facet_wrap(~ site, scales = "free_x") +
    scale_x_continuous(breaks = week(as_date(paste("2000-", 1:12, "-01"))),
                     labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"))
```

```{r laievaltab}
daily %>% 
  pivot_wider(names_from = type, values_from = value) %>% 
  gather(type, observed, -site, -date, -simulated) %>% 
  na.omit() %>% 
  nest_by(site, type) %>% 
  mutate(R2 = summary(lm(observed ~ 0 + simulated, data = data))$r.squared,
         CC = cor(data$simulated, data$observed),
         RMSEP = sqrt(mean((data$simulated-data$observed)^2)),
         RRMSEP = sqrt(mean((data$simulated-data$observed)^2))/mean(data$observed),
         SD =sd(data$simulated-data$observed),
         RSD =sd(data$simulated-data$observed)/mean(data$observed)) %>% 
  select(-data) %>% 
  knitr::kable()
```

### Leaf Area Index per Age

```{r laiadata}
#| message: false
daily <- read_tsv("outputs/evaluation_fluxes.tsv") %>% 
  filter(variable %in% c("lai_mature", "lai_old", "lai_young")) %>% 
  separate(variable, c("variable", "age")) %>% 
  rename(value = simulated)
monthly <- daily %>% 
  group_by(site, date = floor_date(date, "month"), variable, age) %>% 
  summarise(l = quantile(value, 0.025, na.rm = TRUE), 
            value = mean(value, na.rm = TRUE), 
            h = quantile(value, 0.975, na.rm = TRUE))
```

```{r laiadaily}
#| message: false
#| warning: false
daily %>% 
  ggplot(aes(date, value, col = age)) +
  geom_line(alpha = 0.5) +
  geom_line(data = monthly) +
  facet_wrap(~ site, scales = "free_x") +
  theme_bw() +
  theme(legend.position = "bottom") +
  xlab("") + ylab("Leaf Area Index (m2/m2)")
```

```{r laia15days}
#| message: false
#| warning: false
daily %>% 
  group_by(site, variable, age, date = floor_date(date, "15 days")) %>% 
  summarise_all(mean, na.rm = T) %>%
  mutate(week = week(date)) %>%  
  group_by(site, variable, age, week) %>% 
  summarise(l = quantile(value, 0.025, na.rm = TRUE), 
            m = mean(value, na.rm = TRUE), 
            h = quantile(value, 0.975, na.rm = TRUE)) %>% 
  ggplot(aes(week, m)) +
  geom_rect(aes(xmin = week, xmax = end), fill  = "#fff4e0",
           ymin = -Inf, ymax = Inf, alpha = 0.5,
           data = data.frame(week = week(as_date(c("2000-8-1", "2000-06-15"))),
                             m = -Inf,
                             end = week(as_date(c("2000-12-1", "2000-11-1"))),
                             site = c("Paracou", "Tapajos"))) +
  geom_ribbon(aes(ymin = l, ymax = h, fill = age), col = NA, alpha = 0.2) +
  geom_smooth(aes(col = age), se = FALSE) +
  theme_bw() +
  theme(axis.title = element_blank(), legend.position = "bottom") +
  scale_fill_discrete("") +
  scale_color_discrete("") +
  facet_wrap(~ site, scales = "free_x") +
    scale_x_continuous(breaks = week(as_date(paste("2000-", 1:12, "-01"))),
                     labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"))
```

### Evapotranspiration

```{r etdata}
#| message: false
daily <- read_tsv("outputs/evaluation_fluxes.tsv") %>% 
  filter(variable == "et") %>% 
  left_join(read_tsv("outputs/fluxnet_fluxes.tsv") %>% 
              mutate(observed = value*20) %>% 
              select(-value)) %>% 
  left_join(read_tsv("outputs/fluxnet_fluxes.tsv") %>% 
              filter(variable == "vpd_max") %>% 
              rename(vpdmax = value) %>% 
              select(-variable)) %>% 
  gather(type, value, -site, -date, -variable, -vpdmax)
monthly <- daily %>% 
  group_by(site, date = floor_date(date, "month"), variable, type) %>% 
  summarise(l = quantile(value, 0.025, na.rm = TRUE), 
            value = mean(value, na.rm = TRUE), 
            h = quantile(value, 0.975, na.rm = TRUE))
```

```{r etdaily}
#| message: false
#| warning: false
daily %>% 
  ggplot(aes(date, value, col = type)) +
  geom_line(alpha = 0.5) +
  geom_line(data = monthly) +
  facet_wrap(~ site, scales = "free_x") +
  theme_bw() +
  theme(legend.position = "bottom") +
  xlab("") + ylab("Evapotranspitation (mm/day)")
```

```{r et15days}
#| message: false
#| warning: false
daily %>% 
  group_by(site, variable, type, date = floor_date(date, "15 days")) %>% 
  summarise_all(mean, na.rm = T) %>%
  mutate(week = week(date)) %>%  
  group_by(site, variable, type, week) %>% 
  summarise(l = quantile(value, 0.025, na.rm = TRUE), 
            m = mean(value, na.rm = TRUE), 
            h = quantile(value, 0.975, na.rm = TRUE)) %>% 
  ggplot(aes(week, m)) +
  geom_rect(aes(xmin = week, xmax = end), fill  = "#fff4e0",
           ymin = -Inf, ymax = Inf, alpha = 0.5,
           data = data.frame(week = week(as_date(c("2000-8-1", "2000-06-15"))),
                             m = -Inf,
                             end = week(as_date(c("2000-12-1", "2000-11-1"))),
                             site = c("Paracou", "Tapajos"))) +
  geom_ribbon(aes(ymin = l, ymax = h, fill = type), col = NA, alpha = 0.2) +
  geom_smooth(aes(col = type), se = FALSE) +
  theme_bw() +
  theme(axis.title = element_blank(), legend.position = "bottom") +
  scale_fill_discrete("") +
  scale_color_discrete("") +
  facet_wrap(~ site, scales = "free_x") +
    scale_x_continuous(breaks = week(as_date(paste("2000-", 1:12, "-01"))),
                     labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"))
```

```{r etvpd}
#| message: false
#| warning: false
daily %>% 
  ggplot(aes(vpdmax, value, col = type)) +
  geom_point(alpha = 0.1) +
  theme_bw() +
  facet_wrap(~ site) +
  theme(legend.position = "bottom") +
  facet_wrap(~ site) +
  xlab("Maximum Vapoure Pressure deficit (kPa day)") + ylab("Growth Primary Productivity (GPP, gC/m2/day)") +
  ylim(0, NA) +
  ggpubr::stat_cor()
```

```{r etevalplot}
#| message: false
#| warning: false
daily %>% 
  pivot_wider(names_from = type, values_from = value) %>% 
  ggplot(aes(simulated ,observed, col = yday(date))) +
  facet_wrap(~ site) +
  theme_bw() +
  geom_point() +
  scale_color_viridis_c("Day") +
  geom_abline(col = "red") +
  ylab("Observed ET (mm/day)") + xlab("Simulated ET (mm/day)") +
  scale_color_viridis_c("Day") +
  ggpubr::stat_cor()
```

```{r etevaltab}
daily %>% 
  pivot_wider(names_from = type, values_from = value) %>% 
  na.omit() %>% 
  nest_by(site, variable) %>% 
  mutate(R2 = summary(lm(observed ~ 0 + simulated, data = data))$r.squared,
         CC = cor(data$simulated, data$observed),
         RMSEP = sqrt(mean((data$simulated-data$observed)^2)),
         RRMSEP = sqrt(mean((data$simulated-data$observed)^2))/mean(data$observed),
         SD =sd(data$simulated-data$observed),
         RSD =sd(data$simulated-data$observed)/mean(data$observed)) %>% 
  select(-data) %>% 
  knitr::kable()
```

### Relative Soil Water Content

```{r rswcdata}
#| message: false
#| warning: false
daily <- read_tsv("outputs/evaluation_fluxes.tsv") %>% 
  filter(variable == "rswc10") %>% 
  left_join(read_tsv("outputs/guyaflux_swc.tsv") %>% 
              filter(variable == "swc10") %>% 
              group_by(site, year = year(date)) %>% 
              mutate(observed = value / quantile(value, 0.95, na.rm = T)) %>% 
              ungroup() %>% 
              mutate(variable = "rswc10") %>% 
              select(-year, -value)) %>% 
  gather(type, value, -site, -date, -variable) %>% 
  na.omit()
monthly <- daily %>% 
  group_by(site, date = floor_date(date, "month"), variable, type) %>% 
  summarise(l = quantile(value, 0.025, na.rm = TRUE), 
            value = mean(value, na.rm = TRUE), 
            h = quantile(value, 0.975, na.rm = TRUE))
```

```{r rswcdaily}
#| message: false
#| warning: false
daily %>% 
  ggplot(aes(date, value, col = type)) +
  geom_line(alpha = 0.5) +
  geom_line(data = monthly) +
  facet_wrap(~ site, scales = "free_x") +
  theme_bw() +
  theme(legend.position = "bottom") +
  xlab("") + ylab("Relative Soil Water Content (%)")
```

```{r rswc15days}
#| message: false
#| warning: false
daily %>% 
  group_by(site, variable, type, date = floor_date(date, "15 days")) %>% 
  summarise_all(mean, na.rm = T) %>%
  mutate(week = week(date)) %>%  
  group_by(site, variable, type, week) %>% 
  summarise(l = quantile(value, 0.025, na.rm = TRUE), 
            m = mean(value, na.rm = TRUE), 
            h = quantile(value, 0.975, na.rm = TRUE)) %>% 
  ggplot(aes(week, m)) +
  geom_rect(aes(xmin = week, xmax = end), fill  = "#fff4e0",
           ymin = -Inf, ymax = Inf, alpha = 0.5,
           data = data.frame(week = week(as_date(c("2000-8-1", "2000-06-15"))),
                             m = -Inf,
                             end = week(as_date(c("2000-12-1", "2000-11-1"))),
                             site = c("Paracou", "Tapajos"))) +
  geom_ribbon(aes(ymin = l, ymax = h, fill = type), col = NA, alpha = 0.2) +
  geom_smooth(aes(col = type), se = FALSE) +
  theme_bw() +
  theme(axis.title = element_blank(), legend.position = "bottom") +
  scale_fill_discrete("") +
  scale_color_discrete("") +
  facet_wrap(~ site, scales = "free_x") +
    scale_x_continuous(breaks = week(as_date(paste("2000-", 1:12, "-01"))),
                     labels = c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"))
```

```{r rswcevaltab}
daily %>% 
  pivot_wider(names_from = type, values_from = value) %>% 
  na.omit() %>% 
  nest_by(site, variable) %>% 
  mutate(R2 = summary(lm(observed ~ 0 + simulated, data = data))$r.squared,
         CC = cor(data$simulated, data$observed),
         RMSEP = sqrt(mean((data$simulated-data$observed)^2)),
         RRMSEP = sqrt(mean((data$simulated-data$observed)^2))/mean(data$observed),
         SD =sd(data$simulated-data$observed),
         RSD =sd(data$simulated-data$observed)/mean(data$observed)) %>% 
  select(-data) %>% 
  knitr::kable()
```

## Structure

```{r simforestdata}
#| eval: false
files <- list.files("results/run3/", pattern = "final_pattern.txt", 
                    recursive = T, full.names = T) 
names(files) <- list.files("results/run3/", pattern = "final_pattern.txt", 
                    recursive = T, full.names = F) 
troll_forest <- files %>% 
  lapply(vroom::vroom) %>% 
  bind_rows(.id = "file") %>% 
  separate(file, "sim", "/") %>% 
  separate(sim, c("site", "repetition")) %>%
  mutate(repetition = as.numeric(gsub("R", "", repetition))) %>% 
  mutate(species = gsub("_", " ", s_name)) %>% 
  mutate(dbh = dbh*100)
write_tsv(troll_forest, "outputs/evaluation_forest.tsv")
```

### Forest

```{r str}
#| message: false
structure <- read_tsv("outputs/evaluation_forest.tsv") %>% 
  filter(dbh >= 10) %>% 
  mutate(plot = repetition) %>% 
  select(site, plot, dbh) %>% 
  mutate(dbh_class = cut(dbh, breaks = seq(10, 200, by = 10), 
                         labels = seq(10, 190, by = 10)+5)) %>% 
  mutate(dbh_class = as.numeric(as.character(dbh_class))) %>% 
  group_by(site, plot, dbh_class) %>% 
  summarise(abundance = n()/4,
            ba = sum((dbh/2)^2*pi)/10^4/4) %>% 
  mutate(log_abundance = log10(abundance)) %>% 
  gather(variable, simulated, -site, -dbh_class, -plot) %>% 
  full_join(read_tsv("outputs/structure.tsv") %>% 
              filter(type != "understory") %>% 
              select(-type)) %>% 
  gather(type, value, -site, -dbh_class, -variable, -plot) %>% 
  group_by(site, dbh_class, variable, type) %>% 
  summarise(l = quantile(value, 0.025, na.rm = TRUE), 
            m = quantile(value, 0.5, na.rm = TRUE), 
            h = quantile(value, 0.975, na.rm = TRUE)) %>% 
  na.omit()
```

```{r dbhstr}
#| message: false
#| warning: false
labs <- structure %>% 
  group_by(variable, type, site) %>% 
  summarise(total = sum(m)) %>% 
  filter(variable %in% c("ba", "abundance")) %>% 
  mutate(variable = ifelse(variable == "abundance", "log_abundance", "ba")) %>% 
  group_by(variable, site) %>% 
  pivot_wider(names_from = type, values_from = total) %>% 
  mutate(label = paste0("Observed: ", round(observed), "\nSimulated: ", round(simulated))) %>% 
  mutate(dbh_class = 120) %>% 
  mutate(m = ifelse(variable == "log_abundance", 1.5, 5)) 
filter(structure, variable %in% c("ba", "log_abundance")) %>% 
  ggplot(aes(dbh_class, m)) +
  geom_linerange(aes(ymin = l, ymax = h, col = type)) +
  geom_point(aes(col = type)) +
  geom_line(aes(col = type)) +
  theme_bw() +
  facet_grid(variable ~ site, scales = "free_y") +
  xlab("DBH (cm)") + ylab("") +
  scale_color_discrete("") +
  theme(legend.position = "bottom") +
  geom_text(data = labs, aes(label = label))
```

```{r dbhstreval}
#| message: false
#| warning: false
structure %>% 
  filter(variable != "abundance") %>% 
  gather(quantile, value, -site, -dbh_class, -variable, -type) %>% 
  mutate(type = str_sub(type, 1, 3)) %>% 
  mutate(quantile = paste0(quantile, "_", type)) %>% 
  select(-type) %>% 
  pivot_wider(names_from = quantile, values_from = value) %>% 
  ggplot(aes(m_obs, m_sim, col = dbh_class)) +
  geom_linerange(aes(ymin = l_sim, ymax = h_sim)) +
  geom_linerange(aes(xmin = l_obs, xmax = h_obs)) +
  geom_point() +
  facet_wrap(~ site ~ variable, scales = "free") +
  theme_bw() +
  geom_abline() +
  ylab("Simulated") + xlab("Observed") +
  scale_color_viridis_c(guide = "none") +
  ggpubr::stat_cor() 
```

### Understory

```{r understory}
#| message: false
understory <- read_tsv("outputs/evaluation_forest.tsv") %>% 
  filter(dbh <= 10) %>% 
  mutate(plot = repetition) %>% 
  select(site, plot, dbh) %>% 
  mutate(dbh_class = cut(dbh, breaks = seq(1, 10, by = 1), 
                         labels = seq(1, 9, by = 1)+0.5)) %>% 
  mutate(dbh_class = as.numeric(as.character(dbh_class))) %>% 
  group_by(site, plot, dbh_class) %>% 
  summarise(abundance = n()/4,
            ba = sum((dbh/2)^2*pi)/10^4/4) %>% 
  mutate(log_abundance = log10(abundance)) %>% 
  gather(variable, simulated, -site, -dbh_class, -plot) %>% 
  full_join(read_tsv("outputs/structure.tsv") %>% 
            filter(type == "understory") %>% 
              select(-type)) %>% 
  gather(type, value, -site, -dbh_class, -variable, -plot) %>% 
  group_by(site, dbh_class, variable, type) %>% 
  summarise(l = quantile(value, 0.025, na.rm = TRUE), 
            m = quantile(value, 0.5, na.rm = TRUE), 
            h = quantile(value, 0.975, na.rm = TRUE)) %>% 
  na.omit()
```

```{r understoryfig}
#| message: false
#| warning: false
labs <- understory %>% 
  group_by(variable, type, site) %>% 
  summarise(total = sum(m)) %>% 
  filter(variable %in% c("ba", "abundance")) %>% 
  mutate(variable = ifelse(variable == "abundance", "log_abundance", "ba")) %>% 
  group_by(variable, site) %>% 
  pivot_wider(names_from = type, values_from = total) %>% 
  mutate(label = paste0("Observed: ", round(observed), "\nSimulated: ", round(simulated))) %>% 
  mutate(dbh_class = 5) %>% 
  mutate(m = ifelse(variable == "log_abundance", 3, 0.6)) 
filter(understory, variable %in% c("ba", "log_abundance")) %>% 
  ggplot(aes(dbh_class, m)) +
  geom_linerange(aes(ymin = l, ymax = h, col = type)) +
  geom_point(aes(col = type)) +
  geom_line(aes(col = type)) +
  theme_bw() +
  facet_grid(variable ~ site, scales = "free_y") +
  xlab("DBH (cm)") + ylab("") +
  scale_color_discrete("") +
  theme(legend.position = "bottom") +
  geom_text(data = labs, aes(label = label))
```

```{r understoryeval}
#| message: false
#| warning: false
understory %>% 
  filter(site == "Paracou") %>% 
  filter(variable != "abundance") %>% 
  gather(quantile, value, -site, -dbh_class, -variable, -type) %>% 
  mutate(type = str_sub(type, 1, 3)) %>% 
  mutate(quantile = paste0(quantile, "_", type)) %>% 
  select(-type) %>% 
  pivot_wider(names_from = quantile, values_from = value) %>% 
  ggplot(aes(m_obs, m_sim, col = dbh_class)) +
  geom_linerange(aes(ymin = l_sim, ymax = h_sim)) +
  geom_linerange(aes(xmin = l_obs, xmax = h_obs)) +
  geom_point() +
  facet_wrap(~ variable, scales = "free") +
  theme_bw() +
  geom_abline() +
  ylab("Simulated") + xlab("Observed") +
  scale_color_viridis_c(guide = "none") +
  ggpubr::stat_cor() +
  ggtitle("Paracou")
```

## Composition

### Species

```{r compodata}
#| message: false
#| warning: false
compositon <- read_tsv("outputs/evaluation_forest.tsv") %>% 
  filter(dbh >= 10) %>% 
  mutate(plot = repetition) %>% 
  mutate(species = gsub("_", " ", s_name)) %>% 
  select(site, plot, species) %>% 
  group_by(site, plot, species) %>% 
  summarise(simulated = n()/4) %>% 
  mutate(variable = "abundance") %>% 
  select(site, plot, species, variable, simulated) %>% 
  full_join(read_tsv("outputs/composition.tsv")) %>% 
  gather(type, value, -site, -plot, -variable, -species) %>% 
  group_by(site, plot, variable, type) %>% 
  arrange(desc(value)) %>% 
  mutate(rank = 1:n()) %>% 
  group_by(site, rank, type, variable) %>% 
  summarise(l = quantile(value, 0.025, na.rm = TRUE), 
            m = quantile(value, 0.5, na.rm = TRUE), 
            h = quantile(value, 0.975, na.rm = TRUE)) %>% 
  filter(rank < 115)
```

```{r compofig}
#| message: false
#| warning: false
compositon %>% 
  ggplot(aes(rank, m, col = type)) +
  geom_line(aes(y = l), linewidth = 0.5, linetype = "dashed") +
  geom_line(aes(y = h), linewidth = 0.5, linetype = "dashed") +
  geom_line() +
  theme_bw() +
  facet_wrap(~ site) +
  xlab("Rank") + ylab("Abundance") +
  scale_color_discrete("") +
  theme(legend.position = "bottom") +
  scale_y_log10()
```

```{r compoquant}
#| message: false
#| warning: false
compositon %>% 
  ungroup() %>% 
  gather(quantile, value, -site, -rank, -variable, -type) %>% 
  mutate(type = str_sub(type, 1, 3)) %>% 
  mutate(quantile = paste0(quantile, "_", type)) %>% 
  select(-type) %>% 
  pivot_wider(names_from = quantile, values_from = value) %>% 
  ggplot(aes(m_obs, m_sim, col = rank)) +
  geom_linerange(aes(ymin = l_sim, ymax = h_sim)) +
  geom_linerange(aes(xmin = l_obs, xmax = h_obs)) +
  geom_point() +
  facet_wrap(~ site, scales = "free") +
  theme_bw() +
  geom_abline() +
  ylab("Simulated abundance") + xlab("Observed abundance") +
  scale_y_log10() + scale_x_log10() +
  scale_color_viridis_c(guide = "none") +
  ggpubr::stat_cor()
```

### Functional

```{r ftdata}
#| message: false
#| warning: false
troll_traits <- list(
    read_tsv("outputs/paracou_species_troll.tsv"),
    read_tsv("outputs/tapajos_species_troll.tsv")
) %>% bind_rows() %>% 
  unique() %>% 
  rename_all(~ gsub("s_", "", .)) %>% 
  select(-seedmass, -regionalfreq) %>% 
  rename(species = name) %>% 
  mutate(species = gsub("_", " ", species)) %>% 
  gather(trait, trait_value, -species)
troll_traitdist <- read_tsv("outputs/evaluation_forest.tsv") %>% 
  filter(dbh >= 10) %>% 
  mutate(plot = repetition) %>% 
  select(site, plot, species) %>% 
  left_join(troll_traits)
all_traits_q <- bind_rows(
  mutate(troll_traitdist, type = "sim"),
  mutate(read_tsv("outputs/functional_composition.tsv"), type = "obs")
) %>% 
  group_by(site, trait, plot, type) %>% 
  summarise(quantile = list(quantile(trait_value, seq(0, 1, length.out = 100)))) %>% 
  unnest_longer(quantile) %>% 
  group_by(site, trait, type, quantile_id)%>% 
  summarise(l = quantile(quantile, 0.025, na.rm = TRUE), 
            m = quantile(quantile, 0.5, na.rm = TRUE), 
            h = quantile(quantile, 0.975, na.rm = TRUE)) %>% 
  gather(quantile, value, -site, -trait, -type, -quantile_id) %>% 
  mutate(quantile = paste0(quantile, "_", type)) %>% 
  ungroup() %>% 
  select(-type) %>% 
  pivot_wider(names_from = quantile, values_from = value)
```

```{r ftparfig}
#| message: false
#| warning: false
read_tsv("outputs/functional_composition.tsv") %>% 
  filter(site == "Paracou") %>% 
  ggplot(aes(trait_value, group = plot)) +
  geom_density(aes(col = "Observed")) +
  geom_density(aes(col = "Simulated"),
               data = filter(troll_traitdist, site == "Paracou")) +
  facet_wrap(~ trait, scales = "free") +
  theme_bw() +
  ggtitle("Paracou", "546,498 inds represented on 577,761 (94.59%)") +
  theme(axis.title = element_blank(), legend.position = "bottom") +
  scale_color_discrete("")
```

```{r ftparquant}
#| message: false
#| warning: false
all_traits_q %>% 
  filter(site == "Paracou") %>% 
  ggplot(aes(m_obs, m_sim)) +
  geom_abline(col = "blue") +
  geom_linerange(aes(ymin = l_sim, ymax = h_sim), alpha = .5) +
  geom_linerange(aes(xmin = l_obs, xmax = h_obs), alpha = .5) +
  geom_point() +
  theme_bw() +
  facet_wrap(~ trait, scales = "free") +
  ggtitle("Paracou", "546,498 inds represented on 577,761 (94.59%)") +
  xlab("Observed trait quantiles") +
  ylab("Simulated trait quantiles") +
  ggpubr::stat_cor()
```

```{r fttapfig}
#| message: false
#| warning: false
read_tsv("outputs/functional_composition.tsv") %>% 
  filter(site == "Tapajos") %>% 
  ggplot(aes(trait_value, group = plot)) +
  geom_density(aes(col = "Observed")) +
  geom_density(aes(col = "Simulated"),
               data = filter(troll_traitdist, site == "Tapajos")) +
  facet_wrap(~ trait, scales = "free") +
  theme_bw() +
  ggtitle("Tapajos Genus level", "19,188 inds represented on 19,499 (98.65%)") +
  theme(axis.title = element_blank(), legend.position = "bottom") +
  scale_color_discrete("")
```

```{r ftaptquant}
#| message: false
#| warning: false
all_traits_q %>% 
  filter(site == "Tapajos") %>% 
  ggplot(aes(m_obs, m_sim)) +
  geom_abline(col = "blue") +
  geom_linerange(aes(ymin = l_sim, ymax = h_sim), alpha = .5) +
  geom_linerange(aes(xmin = l_obs, xmax = h_obs), alpha = .5) +
  geom_point() +
  theme_bw() +
  facet_wrap(~ trait, scales = "free") +
  ggtitle("Tapajos Genus level", "19,188 inds represented on 19,499 (98.65%)") +
  xlab("Observed trait quantiles") +
  ylab("Simulated trait quantiles") +
  ggpubr::stat_cor()
```
