```{r setup}
#| include: false 
library(tidyverse) 
library(knitr)
library(sf)
```

# Structure

Calibration of forest structure parameters (crown radius allometry and mortality):

-   $m$ : minimal death rate in death per year calibrated to 0.025 at Paracou
-   $a_{CR}$ : crown radius intercept calibrated to 2.13 at Paracou
-   $b_{CR}$ : crown radius slope calibrated to 0.36 at Paracou

## Crown radius parameters variation

We gathered all Tallo measurements of crown radius and diameter in a radius of 10-km of Tapajos for trees above 10-cm. We randomly selected 10 trees per class diameter of decimetre a thousand times and computed crown radius intercepts and slopes. We obtained a parameter distribution with a correlation of 0.91, a linear regression of $b_{CR} = -0.39+0.57 \times a_{CR}$, and a standard variation of 0.08. Dashed lines shows Paracou values, which are lower than the observations.

```{r tapajostalloparams}
#| message: false
#| warning: false
tapajos <- tibble(
  site = c("Tapajos"),
  latitude = c(-2.85667),
  longitude = c(-54.9588900),
) %>% 
  st_as_sf(coords = c("longitude", "latitude"), crs = 4326) %>% 
  st_buffer(10^4)
params <- read_csv("data/species/tallo.csv") %>% 
  filter(longitude <= -39, longitude >= -79, latitude >= -18, latitude <= 10) %>% 
  st_as_sf(coords = c("longitude", "latitude"), crs = 4326) %>% 
  st_intersection(tapajos) %>% 
  filter(!is.na(crown_radius_m), !is.na(stem_diameter_cm)) %>% 
  mutate(dbh_m = stem_diameter_cm * 0.01) %>% 
  filter(dbh_m >= 0.1) %>% 
  mutate(class_dbh_dm = floor(dbh_m * 10)) %>% 
  mutate(rep = list(1:10^3)) %>% 
  unnest(rep) %>% 
  group_by(rep) %>% 
  sample_n(10, replace = T) %>% 
  unique() %>%
  st_drop_geometry() %>% 
  ungroup() %>% 
  nest_by(rep) %>% 
  mutate(coefs = list(coef(lm(log(crown_radius_m) ~ log(dbh_m), data = data)))) %>% 
  mutate(a = coefs[1], b = coefs[2]) %>% 
  select(rep, a, b) %>% 
  filter(a > 0, b > 0)
```

```{r tapajostalloparamsfig}
#| message: false
ggplot(params, aes(a, b)) +
  geom_vline(xintercept = 2.13, linetype = "dashed") +
  geom_hline(yintercept = 0.63, linetype = "dashed") +
  geom_point() +
  geom_density2d() +
  theme_bw() +
  xlab(expression(a[CR])) +
  ylab(expression(b[CR])) +
  ggpubr::stat_cor() +
  geom_smooth(col = "red", method = "lm") +
  ggpubr::stat_regline_equation(label.y.npc = 0.8)
```

## Parameters space

We prepared the parameter space for calibration defining low limit, high limit, and step for a, m, and the error of b. b was computed using the linear equation plus the error. We used $3 \sigma$ for the error. We obtained a calibration grid of **11,193 simulations**. Dashed lines shows Paracou values which are thus lower. The last figure shows the corresponding projected allometries of crown radius.

```{r prepparamspace}
pars <- data.frame(parameter = c("a", "error_b", "m"),
                   low = c(1.4, -4*0.08, 0.01),
                   high = c(2.4, 4*0.08, 0.03),
                   by = c(0.025, 0.05, 0.001))
grid <- data.frame(a = seq(pars$low[1], pars$high[1], by = pars$by[1])) %>% 
  mutate(error_b = list(seq(pars$low[2], pars$high[2], by = pars$by[2]))) %>% 
  unnest(error_b) %>% 
  mutate(b = -0.39 + 0.57*a + error_b) %>% 
  mutate(m = list(seq(pars$low[3], pars$high[3], by = pars$by[3]))) %>% 
  unnest(m)
```

```{r parstab}
kable(pars)
```

```{r abplot}
grid %>% 
  ggplot(aes(a, b)) +
  geom_vline(xintercept = 2.13, linetype = "dashed") +
  geom_hline(yintercept = 0.63, linetype = "dashed") +
  geom_point(col = "lightgrey") +
  geom_abline(intercept = -0.37, slope = 0.57, col = "blue") +
  theme_bw() +
  xlab(expression(a[CR])) +
  ylab(expression(b[CR]))
```

```{r amplot}
grid %>% 
  ggplot(aes(a, m)) +
  geom_vline(xintercept = 2.13, linetype = "dashed") +
  geom_hline(yintercept = 0.025, linetype = "dashed") +
  geom_point(col = "lightgrey") +
  theme_bw() +
  xlab(expression(a[CR])) +
  ylab(expression(m))
```

```{r crallomplot}
grid %>% 
  mutate(dbh = list(seq(1, 150, 1)/100)) %>% 
  unnest(dbh) %>% 
  mutate(cr = exp(a+b*log(dbh))) %>% 
  ggplot(aes(dbh, cr)) +
  geom_line(aes(col = a, group = paste(a, b))) +
  theme_bw() +
  scale_colour_viridis_c(expression(a[CR])) +
  xlab("Diameter (m)") + ylab("Crown radius (m)") +
  geom_line(col = "black", linetype = "dashed",
            data = data.frame(dbh = seq(1, 150, 1)/100) %>% 
              mutate(cr = exp(2.13+0.63*log(dbh))))
```

## Observations

According to @rice2004 :

-   470 live trees per hectare with diameter at breast height (dbh) ≥10
-   Aboveground live biomass was 143.7 ± 5.4 Mg C/ha
-   Stem density -0.058 (±0.003) dbh_cm + 2.912 (±0.076) for dbh \< 40
-   Stem density -0.016 (±0.001) dbh_cm + 1.451 (±0.04) for dbh \> 40

```{r rice_obs}
obs <- data.frame(dbh_class = seq(15, 175, 5)) %>% 
  mutate(abundance = ifelse(dbh_class < 40, 
                            10^(-0.058*dbh_class+2.912), 
                            10^(-0.016*dbh_class+1.451)))
ggplot(obs, (aes(dbh_class, abundance))) +
  geom_line() +
  theme_bw() +
  scale_y_log10(labels = scales::comma) +
  xlab("DBH [ cm ]") + ylab(expression(Abundance~"["~ha^{-~1}~"]"))
```

## Parameters effect

```{r calib}
#| eval: false
calib <- read_tsv("results/calib_structure.tsv") %>% 
  mutate(dbh_class = cut(dbh_cm, breaks = seq(10, 200, by = 10), 
                         labels = seq(10, 190, by = 10)+5,
                         include.lowest = TRUE)) %>% 
  mutate(dbh_class = as.numeric(as.character(dbh_class))) %>% 
  group_by(a, b, m, dbh_class) %>% 
  summarise(abundance = n()/9, agb = sum(agb)/9)
write_tsv(calib, "outputs/calib_structure.tsv")
```

```{r aCR}
read_tsv("outputs/calib_structure.tsv") %>% 
  group_by(a, b, m) %>% 
  summarise(abundance = sum(abundance), agb = sum(agb)/10^3/2) %>% 
  gather(variable, value, -a, -b, -m) %>% 
  ggplot(aes(a, value, col = b)) +
  geom_point() +
  facet_wrap(~ variable, scales = "free_y") +
  theme_bw() +
  geom_hline(aes(yintercept = value),
             data = data.frame(value = c(470, 143.7), 
                               variable = c("abundance", "agb")),
             col = "red") +
  scale_color_viridis_c(expression(b[CR])) +
  xlab(expression(a[CR])) + ylab("")
```

```{r aCRdist}
#| message: false
#| warning: false
read_tsv("outputs/calib_structure.tsv") %>% 
  ggplot(aes(dbh_class, abundance)) +
  geom_line(aes(col = a, group = paste(a, b, m))) +
  geom_point(data = obs, col = "red") +
  scale_y_log10(labels = scales::comma) +
  xlab("DBH [ cm ]") + ylab(expression(Abundance~"["~ha^{-~1}~"]")) +
  scale_color_viridis_c(expression(a[CR])) +
  theme_bw()
```

```{r bCR}
read_tsv("outputs/calib_structure.tsv") %>% 
  group_by(a, b, m) %>% 
  summarise(abundance = sum(abundance), agb = sum(agb)/10^3/2) %>% 
  gather(variable, value, -a, -b, -m) %>% 
  ggplot(aes(b, value, col = a)) +
  geom_point() +
  facet_wrap(~ variable, scales = "free_y") +
  theme_bw() +
  geom_hline(aes(yintercept = value),
             data = data.frame(value = c(470, 143.7), 
                               variable = c("abundance", "agb")),
             col = "red") +
  scale_color_viridis_c(expression(a[CR])) +
  xlab(expression(b[CR])) + ylab("")
```

```{r bCRdist}
#| message: false
#| warning: false
read_tsv("outputs/calib_structure.tsv") %>% 
  ggplot(aes(dbh_class, abundance)) +
  geom_line(aes(col = b, group = paste(a, b, m))) +
  geom_point(data = obs, col = "red") +
  scale_y_log10(labels = scales::comma) +
  xlab("DBH [ cm ]") + ylab(expression(Abundance~"["~ha^{-~1}~"]")) +
  scale_color_viridis_c(expression(b[CR])) +
  theme_bw()
```

```{r m}
read_tsv("outputs/calib_structure.tsv") %>% 
  group_by(a, b, m) %>% 
  summarise(abundance = sum(abundance), agb = sum(agb)/10^3/2) %>% 
  gather(variable, value, -a, -b, -m) %>% 
  ggplot(aes(m, value, col = a)) +
  geom_point() +
  facet_wrap(~ variable, scales = "free_y") +
  theme_bw() +
  geom_hline(aes(yintercept = value),
             data = data.frame(value = c(470, 143.7), 
                               variable = c("abundance", "agb")),
             col = "red") +
  scale_color_viridis_c(expression(a[CR])) +
  xlab(expression(m)) + ylab("")
```

```{r mdist}
#| message: false
#| warning: false
read_tsv("outputs/calib_structure.tsv") %>% 
  ggplot(aes(dbh_class, abundance)) +
  geom_line(aes(col = m, group = paste(a, b, m))) +
  geom_point(data = obs, col = "red") +
  scale_y_log10(labels = scales::comma) +
  xlab("DBH [ cm ]") + ylab(expression(Abundance~"["~ha^{-~1}~"]")) +
  scale_color_viridis_c(expression(m)) +
  theme_bw()
```

## Best parameters

```{r best}
#| message: false
#| warning: false
eval <- read_tsv("outputs/calib_structure.tsv") %>% 
  rename(simulated = abundance) %>% 
  left_join(rename(obs, observed = abundance)) %>% 
  mutate(simulated = ifelse(is.na(simulated), 0, simulated)) %>% 
  group_by(a, b, m) %>% 
  summarise(err_dist = mean((log10(observed) - log10(simulated))^2, na.rm = TRUE), 
            err_abund = (470 - sum(simulated))^2, 
            err_agb = (143.7 - sum(agb)/10^3/2)^2) %>% 
  mutate_at(c("err_dist", "err_abund", "err_agb"), ~ as.vector(scale(., center = FALSE))) %>%
  mutate(RMSEP_all = sqrt(err_dist + err_abund + err_agb),
         RMSEP_agb = sqrt(err_agb),
         RMSEP_abund = sqrt(err_abund),
         RMSEP_dist = sqrt(err_dist)) %>% 
  ungroup() %>% 
  mutate(sim = paste0("Tapajos_", a, "_", b, "_", m))
best <- eval %>% 
  select(RMSEP_all, RMSEP_agb, RMSEP_abund, RMSEP_dist, a, b, m, sim) %>% 
  gather(type, RMSEP, -a, -b, -m, -sim) %>% 
  group_by(type) %>% 
  slice_min(RMSEP)
```

```{r besttab}
#| message: false
#| warning: false
read_tsv("outputs/calib_structure.tsv") %>% 
  mutate(sim = paste0("Tapajos_", a, "_", b, "_", m)) %>% 
  left_join(best) %>% 
  filter(!is.na(type)) %>% 
  group_by(type, a, b, m) %>% 
  summarise(abundance = sum(abundance), agb = sum(agb)/10^3/2) %>% 
  knitr::kable(caption = "Best structure parameters at Tapajos according to calibration with inventory data.")
```

```{r bestfig}
#| message: false
#| warning: false
read_tsv("outputs/calib_structure.tsv") %>% 
  mutate(sim = paste0("Tapajos_", a, "_", b, "_", m)) %>% 
  left_join(best) %>% 
  filter(!is.na(type)) %>% 
  ggplot(aes(dbh_class, abundance, col = type)) +
  geom_line(aes(group = sim)) +
  geom_point(data = obs, col = "red") +
  scale_y_log10(labels = scales::comma) +
  xlab("DBH [ cm ]") + ylab(expression(Abundance~"["~ha^{-~1}~"]")) +
  theme_bw()
```
